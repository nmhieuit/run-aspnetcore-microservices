apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderingapi-deployment
  labels:
    app: orderingapi
    tags.datadoghq.com/env: Development
    tags.datadoghq.com/service: orderingapi
    tags.datadoghq.com/version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orderingapi
  template:
    metadata:
      labels:
        app: orderingapi
        tags.datadoghq.com/env: Development
        tags.datadoghq.com/service: orderingapi
        tags.datadoghq.com/version: v1
        admission.datadoghq.com/enabled: "true"
      annotations:
        admission.datadoghq.com/dotnet-lib.version: v2.32.0
    spec:
      containers:
        - name: orderingapi
          image: nmhieuit/orderingapi:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_TRACE_SAMPLE_RATE
              value: "0.5"
            - name: DD_RUNTIME_METRICS_ENABLED
              value: "true"
            - name: ASPNETCORE_ENVIRONMENT
              value: "Development"
            - name: ConnectionStrings__OrderingConnectionString
              value: "Server=orderdb-service;Database=OrderDb;User Id=sa;Password=SwN12345678"
            - name: EventBusSettings__HostAddress
              value: "amqp://user:XPyn3sPtaiW6MZeJ@my-release-rabbitmq:5672"
            - name: ElasticConfiguration
              value: "Uri=http://elasticsearch:9200"  
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: orderingapi-service
spec:
  # type: LoadBalancer
  selector:
    app: orderingapi
  ports:
    - protocol: TCP
      port: 8004
      targetPort: 80
